Currently working on:

Move these:
Apex --> Service
ObjectInformation --> Service
ObjectInfoViewModel --> Wpf





Dependancy map

Repository ==> Domain Entities/Logic/IRepository <== Presentation/Service (e.g.VM/XAML)

1. Business entites defined in Domain layer
2. Repository returns/accepts business entites (regardless of ORM/DB). How to map? extension method? partial class? IMapInOut? AutoMapper?
3. IRepository is defined in domain layer and injected into Service
4. Service uses IRepository and it only deals with domain entities and VMs
5. Presentation will use IService to read domain entities and map to VMs (e.g. using MapIn/Out, AutoMapper?)


Refactoring steps (starting with Banks):
Create domain entity
Create IRepository
Create EF Repository
Integration tests for EF Repository

# EF\BankRepository - OK
next:
WinClient\DomainServices
	Mappers.cs - map between core entity and VM
	BankAgent.cs - non-generic, uses AUtoMapper mappings


try ListVM with just repo and mappers instead of Agent/VM

.... wired up MappingCreator etc. Test? then do IMappingEngine?




Do we need ReadBankList in BankAccountService??


EF Notes
========
Set the state of navidation properties to Unchanged to avoid EF generating inserts for them.
if(ef.Bank!=null) context.Entry(ef.Bank).State = System.Data.EntityState.Unchanged;
                    





Backlog:


Login
SQL encryption?


GIT
---

Exclude EXE/DLL etc
Upload to github (hj/8b)


Cannot create default converter to perform 'two-way' conversions between types 
'Finances.WinClient.ViewModels.InputDecimal' and 'System.String'. 
Consider using Converter property of Binding. 
BindingExpression:Path=Amount; DataItem='TransferEditorViewModel' (HashCode=18932196); 
target element is 'TextBox' (Name=''); target property is 'Text' (type 'String')




Interaction Triggers Problem
----------------------------
Triggers used in BanksView and BankAccountsView to allow Ins, Enter, Del and DoubleClick to open the Edit dialog.
Issue:
When the View is closed (by clicking the X on the tab) the triggers are still active. e.g. prressing Ins will open the Add Bank 
dialog.
We can Detach each of the attached triggers in the UserControl Unloaded event, which prevents this, and when the view is re-opened
the triggers are active again and work.
However, when there are multiple workspace open and you switch between them (by clicking the tabs) this causes the Views to be 
Unloaded/Loaded. Again Detaching in Unloaded works, but re-attaching in Loaded only partly works - it works for the mouse triggers but 
not the keyboard triggers.

When Interaction triggers are used, they will keep the View alive!
Using Interaction.GetTriggers(parent).Clear() will release the triggers and allow the view to be GC.
Also calling TriggerBase.Detach will remove the link and allow the view to be GC.

Without calling Detach, the view will GC when unloaded if ActiveOnFocus="True" because the trigger is attached to the control.
When ActiveOnFocus="False" (default) the trigger attaches to the event at the root Window level and therefore keeps the view alive.

WIthout any attemts to Detach/Clear etc, if we toggle between the tabs of Bank and Account (which caused the
UserControl Load/Unload events to fire), then when a key is pressed (e.g. Insert) this will fire multiple times, once for each toggle.
But there is only 4 triggers (defined) int the GetTriggers() collection!

This problem of MULTIPLE FIRING WAS CAUSED BY TabItemGeneratorBehavior

Tree View adventure
-------------------
BankService can read into both IBankIteVM and IBankTreeViewItemVM - using the IBankMapIn interface.
But how can BankService create new ...ItemViewModels generically?
Don't really want to have a factory service in the controlling VM - should be in BankService.

The extra VMs are only going to be for reading, so maybe best to stick
with what we had and just add Read/ReadList methods for the specific type (BankTreeViewItemVM)
and inject factory service for it into BankService.
Maybe the main CRUD methods can use generics anyway?

Need IBankMapOut

Could have a separate BankTreeViewService() ?

Decided to only have the existing BankItemViewModels etc, and base them on TreeViewItemVMBase.
Also handling TreeViewExpaned event int main BankTreeView and loading children in there.




Something to think about
------------------------
An object model that represents the application
e.g. Main
		OpenWorkspaces 
			Workspace
		RegisteredWorkspaces

inject reference to this into each workspace/class so accessible from anywhere?
or just a static Main....
have a look at cross-cutting concerns in DI book

